{"version":3,"sources":["logo.svg","Layouting/index.js","CustomEdges/index.js","CustomEdges/CustomEdge.js","App.js","reportWebVitals.js","index.js"],"names":["dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","onLoad","reactFlowInstance","fitView","onNodeDragStop","event","node","console","log","onElementClick","element","initialElements","id","type","data","label","position","x","y","source","target","className","animated","style","stroke","labelStyle","fill","fontWeight","arrowHeadType","labelBgPadding","labelBgBorderRadius","labelBgStyle","color","fillOpacity","edgeTypes","custom","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","d","href","fontSize","startOffset","textAnchor","text","EdgesFlow","useState","elements","setElements","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","snapToGrid","App","height","borderWidth","borderColor","borderStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b65f8524.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls,\r\n  isNode,\r\n} from \"react-flow-renderer\";\r\nimport dagre from \"dagre\";\r\n\r\nimport initialElements from \"./initial-elements\";\r\n\r\nimport \"./layouting.css\";\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\nconst nodeExtent = [\r\n  [0, 0],\r\n  [1000, 1000],\r\n];\r\n\r\nconst LayoutFlow = () => {\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onLayout = (direction) => {\r\n    const isHorizontal = direction === \"LR\";\r\n    dagreGraph.setGraph({ rankdir: direction });\r\n\r\n    elements.forEach((el) => {\r\n      if (isNode(el)) {\r\n        dagreGraph.setNode(el.id, { width: 150, height: 50 });\r\n      } else {\r\n        dagreGraph.setEdge(el.source, el.target);\r\n      }\r\n    });\r\n\r\n    dagre.layout(dagreGraph);\r\n\r\n    const layoutedElements = elements.map((el) => {\r\n      if (isNode(el)) {\r\n        const nodeWithPosition = dagreGraph.node(el.id);\r\n        el.targetPosition = isHorizontal ? \"left\" : \"top\";\r\n        el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\r\n        // we need to pass a slighltiy different position in order to notify react flow about the change\r\n        // @TODO how can we change the position handling so that we dont need this hack?\r\n        el.position = {\r\n          x: nodeWithPosition.x + Math.random() / 1000,\r\n          y: nodeWithPosition.y,\r\n        };\r\n      }\r\n\r\n      return el;\r\n    });\r\n\r\n    setElements(layoutedElements);\r\n  };\r\n\r\n  return (\r\n    <div className=\"layoutflow\">\r\n      <ReactFlowProvider>\r\n        <ReactFlow\r\n          elements={elements}\r\n          onConnect={onConnect}\r\n          onElementsRemove={onElementsRemove}\r\n          nodeExtent={nodeExtent}\r\n          onLoad={() => onLayout(\"TB\")}\r\n        >\r\n          <Controls />\r\n        </ReactFlow>\r\n        <div className=\"controls\">\r\n          <button onClick={() => onLayout(\"TB\")} style={{ marginRight: 10 }}>\r\n            vertical layout\r\n          </button>\r\n          <button onClick={() => onLayout(\"LR\")}>horizontal layout</button>\r\n        </div>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutFlow;\r\n","import React, { useState } from \"react\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n} from \"react-flow-renderer\";\r\nimport CustomEdge from \"./CustomEdge\";\r\nconst onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\nconst onNodeDragStop = (event, node) => console.log(\"drag stop\", node);\r\nconst onElementClick = (event, element) => console.log(\"click\", element);\r\nconst initialElements = [\r\n  {\r\n    id: \"edges-1\",\r\n    type: \"input\",\r\n    data: { label: \"Body of Knowledge\" },\r\n    position: { x: 250, y: 0 },\r\n  },\r\n  {\r\n    id: \"edges-2\",\r\n    data: { label: \"Automotive\" },\r\n    position: { x: 350, y: 100 },\r\n  },\r\n  {\r\n    id: \"edges-2a\",\r\n    data: { label: \"Manufacturing\" },\r\n    position: { x: 100, y: 100 },\r\n  },\r\n  {\r\n    id: \"edges-3\",\r\n    data: { label: \"Identifying hazards \" },\r\n    position: { x: 250, y: 200 },\r\n  },\r\n  {\r\n    id: \"edges-4\",\r\n    data: { label: \"Defining system scope\" },\r\n    position: { x: 350, y: 300 },\r\n  },\r\n  {\r\n    id: \"edges-3a\",\r\n    data: { label: \"Designign the operating system\" },\r\n    position: { x: 150, y: 300 },\r\n  },\r\n  {\r\n    id: \"edges-5\",\r\n    data: { label: \"Next steps\" },\r\n    position: { x: 250, y: 400 },\r\n  },\r\n  {\r\n    id: \"edges-6\",\r\n    type: \"output\",\r\n    data: { label: \"Output Information 1\" },\r\n    position: { x: 50, y: 550 },\r\n  },\r\n  {\r\n    id: \"edges-7\",\r\n    type: \"output\",\r\n    data: { label: \"Output Information 2\" },\r\n    position: { x: 250, y: 550 },\r\n  },\r\n  {\r\n    id: \"edges-8\",\r\n    type: \"output\",\r\n    data: { label: \"Output Information 3\" },\r\n    position: { x: 450, y: 550 },\r\n  },\r\n  {\r\n    id: \"edges-e1-2\",\r\n    source: \"edges-1\",\r\n    target: \"edges-2\",\r\n    className: \"normal-edge\",\r\n  },\r\n  {\r\n    id: \"edges-e1-2a\",\r\n    source: \"edges-1\",\r\n    target: \"edges-2a\",\r\n    type: \"normal-edge\",\r\n    label: \"additional information\",\r\n  },\r\n  {\r\n    id: \"edges-e2-3\",\r\n    source: \"edges-2\",\r\n    target: \"edges-3\",\r\n    type: \"step\",\r\n  },\r\n  {\r\n    id: \"edges-e3-4\",\r\n    source: \"edges-3\",\r\n    target: \"edges-4\",\r\n    type: \"straight\",\r\n    label: \"no?\",\r\n  },\r\n  {\r\n    id: \"edges-e3-3a\",\r\n    source: \"edges-3\",\r\n    target: \"edges-3a\",\r\n    type: \"straight\",\r\n    label: \"yes?\",\r\n  },\r\n  {\r\n    id: \"edges-e3-5\",\r\n    source: \"edges-4\",\r\n    target: \"edges-5\",\r\n    animated: true,\r\n    label: \"drawing attention\",\r\n    style: { stroke: \"red\" },\r\n  },\r\n  {\r\n    id: \"edges-e5-6\",\r\n    source: \"edges-5\",\r\n    target: \"edges-6\",\r\n    label: \"warning\",\r\n    labelStyle: { fill: \"red\", fontWeight: 700 },\r\n    arrowHeadType: \"arrow\",\r\n  },\r\n  {\r\n    id: \"edges-e5-7\",\r\n    source: \"edges-5\",\r\n    target: \"edges-7\",\r\n    label: \"consideration\",\r\n    labelBgPadding: [8, 4],\r\n    labelBgBorderRadius: 4,\r\n    labelBgStyle: { fill: \"#FFCC00\", color: \"#fff\", fillOpacity: 0.7 },\r\n    arrowHeadType: \"arrowclosed\",\r\n  },\r\n  {\r\n    id: \"edges-e5-8\",\r\n    source: \"edges-5\",\r\n    target: \"edges-8\",\r\n    type: \"normal-edge\",\r\n  },\r\n];\r\nconst edgeTypes = {\r\n  custom: CustomEdge,\r\n};\r\nconst EdgesFlow = () => {\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  return (\r\n    <ReactFlow\r\n      elements={elements}\r\n      onElementClick={onElementClick}\r\n      onElementsRemove={onElementsRemove}\r\n      onConnect={onConnect}\r\n      onNodeDragStop={onNodeDragStop}\r\n      onLoad={onLoad}\r\n      snapToGrid={true}\r\n      edgeTypes={edgeTypes}\r\n      key=\"edges\"\r\n    >\r\n      <MiniMap />\r\n      <Controls />\r\n      <Background />\r\n    </ReactFlow>\r\n  );\r\n};\r\nexport default EdgesFlow;\r\n","import React from 'react';\r\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\r\nexport default function CustomEdge({\r\n  id,\r\n  sourceX,\r\n  sourceY,\r\n  targetX,\r\n  targetY,\r\n  sourcePosition,\r\n  targetPosition,\r\n  style = {},\r\n  data,\r\n  arrowHeadType,\r\n  markerEndId,\r\n}) {\r\n  const edgePath = getBezierPath({ sourceX, sourceY, sourcePosition, targetX, targetY, targetPosition });\r\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\r\n  return (\r\n    <>\r\n      <path id={id} style={style} className=\"react-flow__edge-path\" d={edgePath} markerEnd={markerEnd} />\r\n      <text>\r\n        <textPath href={`#${id}`} style={{ fontSize: '12px' }} startOffset=\"50%\" textAnchor=\"middle\">\r\n          {data.text}\r\n        </textPath>\r\n      </text>\r\n    </>\r\n  );\r\n}","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport FlowDefault from \"./FlowDefault\";\nimport Layout from \"./Layouting\";\nimport EdgesFlow from \"./CustomEdges\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <FlowDefault /> */}\n      {/* <Layout /> */}\n      <div\n        style={{\n          height: 800,\n          borderWidth: \"1px\",\n          borderColor: \"black\",\n          borderStyle: \"solid\",\n        }}\n      >\n        <EdgesFlow />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}